<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>cn.ekgc.vms</groupId>
  <artifactId>VMS</artifactId>
  <version>1.0.0</version>
  <!-- 使用Spring Boot Starter Parent 作为项目父级依赖关系 -->
  <parent>
    <artifactId>spring-boot-starter-parent</artifactId>
    <groupId>org.springframework.boot</groupId>
    <version>2.2.4.RELEASE</version>
  </parent>
  <!-- 使用Spring Boot Starter Parent 作为项目父级依赖关系 -->

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
    <mybatis-spring-boot-starter.version>2.1.2</mybatis-spring-boot-starter.version>
    <druid-spring-boot-starter.version>1.1.22</druid-spring-boot-starter.version>
    <pagehelper-spring-boot-starter.version>1.2.12</pagehelper-spring-boot-starter.version>
    <shiro-spring.version>1.7.1</shiro-spring.version>
    <poi-version>4.1.2</poi-version>
  </properties>

  <dependencies>
    <!-- 配置Spring boot starter web 项目依赖关系-->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>
    <!-- 配置Spring boot starter web 项目依赖关系-->

    <!-- 配置MySql 数据库连接驱动类依赖关系 -->
    <dependency>
      <groupId>mysql</groupId>
      <artifactId>mysql-connector-java</artifactId>
    </dependency>
    <!-- 配置MySql 数据库连接驱动类依赖关系 -->

    <!-- 配置Spring Boot Starter JDBC 依赖关系-->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-jdbc</artifactId>
    </dependency>
    <!-- 配置Spring Boot Starter JDBC 依赖关系-->

    <!--配置 Mybatis Spring Boot Starter 依赖关系-->
    <dependency>
      <groupId>org.mybatis.spring.boot</groupId>
      <artifactId>mybatis-spring-boot-starter</artifactId>
      <version>${mybatis-spring-boot-starter.version}</version>
    </dependency>
    <!--配置 Mybatis Spring Boot Starter 依赖关系-->

    <!-- 配置 druid 数据库连接池 -->
    <dependency>
      <groupId>com.alibaba</groupId>
      <artifactId>druid-spring-boot-starter</artifactId>
      <version>${druid-spring-boot-starter.version}</version>
    </dependency>
    <!-- 配置 druid 数据库连接池 -->

    <!-- 配置 Mybatis 分页插件 Page Helper 依赖关系-->
    <dependency>
      <groupId>com.github.pagehelper</groupId>
      <artifactId>pagehelper-spring-boot-starter</artifactId>
      <version>${pagehelper-spring-boot-starter.version}</version>
    </dependency>
    <!-- 配置 Mybatis 分页插件 Page Helper 依赖关系-->

    <!-- 配置 Spring Boot Starter Thymeleaf 依赖关系-->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-thymeleaf</artifactId>
    </dependency>
    <!-- 配置 Spring Boot Starter Thymeleaf 依赖关系-->

    <!-- 配置使用Shiro 作为安全认证框架 -->
    <dependency>
      <groupId>org.apache.shiro</groupId>
      <artifactId>shiro-spring</artifactId>
      <version>${shiro-spring.version}</version>
    </dependency>
    <!-- 配置使用Shiro 作为安全认证框架 -->

    <!-- 为了能让Spring Boot 项目能够进行热部署，需要增加插件 devtools-->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-devtools</artifactId>
    </dependency>
    <!-- 为了能让Spring Boot 项目能够进行热部署，需要增加插件 devtools-->


    <!-- 配置 POI 依赖关系-->
    <dependency>
      <groupId>org.apache.poi</groupId>
      <artifactId>poi-ooxml</artifactId>
      <version>${poi-version}</version>
    </dependency>
    <!-- 配置 POI 依赖关系-->


    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.11</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <pluginManagement><!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) -->
      <plugins>
        <!--配置 Spring Boot Maven 打包插件-->
        <plugin>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-maven-plugin</artifactId>
          <executions>
            <execution>
              <goals>
                <goal>repackage</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <!--配置 Spring Boot Maven 打包插件-->

        <plugin>
          <artifactId>maven-clean-plugin</artifactId>
          <version>3.1.0</version>
        </plugin>
        <!-- default lifecycle, jar packaging: see https://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_jar_packaging -->
        <plugin>
          <artifactId>maven-resources-plugin</artifactId>
          <version>3.0.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.8.0</version>
        </plugin>
        <plugin>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.22.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-jar-plugin</artifactId>
          <version>3.0.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-install-plugin</artifactId>
          <version>2.5.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>2.8.2</version>
        </plugin>
        <!-- site lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#site_Lifecycle -->
        <plugin>
          <artifactId>maven-site-plugin</artifactId>
          <version>3.7.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-project-info-reports-plugin</artifactId>
          <version>3.0.0</version>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>
</project>
